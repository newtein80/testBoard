<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd">
	
	<!-- ########################################################################################### -->
	<!-- web.xml 에서 DispatcherServlet(스프링 내장 컨트롤러)로 이동한 다음 web.xml에 기술되어 있는
	     appServlet(org.springframework.web.servlet.DispatcherServlet)가 참조하는 설정파일 -->
    <!-- ########################################################################################### -->
    
    <!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
    
    <!-- Enables the Spring MVC @Controller programming model -->
	<!-- Annotation을 사용가능하도록 설정 -->
	<mvc:annotation-driven />
	
	<!-- https://codediver.tistory.com/147 -->
	<context:component-scan base-package="com.test.board">
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
	</context:component-scan>
	
	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<mvc:resources location="/resource/" mapping="/resources/**" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<!-- viewResolver(뷰 해석기) -->
	<!-- viewResolver 부분 수정 (ContentNegotiatingViewResolver 사용) -->
	<!-- https://www.holaxprogramming.com/2012/01/29/spring-mvc-content-negotiating-view-resolver/ -->
	<!-- https://ismydream.tistory.com/139 -->
	<!-- https://mindols.tistory.com/121 -->
	<bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
		<!-- ViewResolver 우선순위 설정 -->
		<property name="order" value="1" />
		<property name="contentNegotiationManager">
			<bean class="org.springframework.web.accept.ContentNegotiationManager">
				
				<constructor-arg>
					<!-- 확장자와 contentType 을 연결해 준다. -->
					<bean class="org.springframework.web.accept.PathExtensionContentNegotiationStrategy">
						<constructor-arg>
							 <!-- 맵핑될 확장자 정의 -->
							<map>
								<entry key="atom" value="application/atom+xml"/>
								<entry key="xml" value="application/xml"/>
								<entry key="html" value="text/html"/>
								<entry key="json" value="application/json"/>
								<entry key="jsonp" value="javascript/jsonp"/>
							</map>
						</constructor-arg>
					</bean>
				</constructor-arg>
			</bean>
		</property>
		<property name="viewResolvers">
			<list>
				<bean class="org.springframework.web.servlet.view.BeanNameViewResolver" p:order="0"/>
				<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
					<!-- 뷰(jsp)의 접두어, 접미어 설정: 파일명만 작성할 수 있게 세팅 -->
					<!-- ex) return "board/list" 인 경우 /WEB-INF/views/ + board/list + .jsp -->
					<property name="prefix" value="/WEB-INF/jsp/"/>
					<property name="suffix" value=".jsp"/>
					<property name="order" value="2" />
				</bean>
			</list>
		</property>
		<!-- 위의 viewResolvers 에 의해 view를 얻지 못했을 경우에 사용되는 view -->
		<property name="defaultViews">
			<list>
				<!-- JSON View -->
				<bean class="org.springframework.web.servlet.view.json.MappingJackson2JsonView">
					<property name="prefixJson" value="false" />
				</bean>
				<!-- XML View -->
				<!-- <bean class="org.springframework.web.servlet.view.xml.MarshallingView">
					<constructor-arg>
						<bean class="org.springframework.oxm.jaxb.Jaxb2Marshaller">
							<property name="packagesToScan">
								<list>
									<value>com.tistory.redtrain.SampleDTO</value>
								</list>
							</property>
						</bean>
					</constructor-arg>
				</bean> -->
			</list>
		</property>
		<!-- https://geekshin.tistory.com/entry/%EC%8A%A4%ED%94%84%EB%A7%81-ContentNegotiatingViewResolver -->
		<!-- <property name="defaultContentType" value="application/json" /> -->
	</bean>
</beans>
